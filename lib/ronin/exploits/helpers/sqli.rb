#
# Ronin SQL - A Ronin library providing support for SQL related security
# tasks.
#
# Copyright (c) 2007-2010 Hal Brodigan (postmodern.mod3 at gmail.com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#

module Ronin
  module Exploits
    module Helpers
      module SQLi
        #
        # The SQL code generator for the exploit.
        #
        # @param [Hash] options
        #   If options are given, then a temporary {Code::SQL::Factory}
        #   object will be created with them.
        #
        # @return [Code::SQL::Factory]
        #   The SQL code generator.
        #
        # @since 0.3.0
        #
        def sql(options={})
          if options.empty?
            @sql ||= Code.sql
          else
            @sql = Code.sql(options)
          end
        end

        #
        # Creates an SQL Injection.
        #
        # @param [Code::SQL::Fragment] stmt
        #   The SQL statement to inject.
        #
        # @param [Hash] options
        #   Additional options.
        #
        # @see Fragment#to_sqli
        #
        # @since 0.3.0
        #
        def sql_injection(stmt,options={})
          sql(options)[stmt].to_sqli(options)
        end
      end
    end
  end
end
